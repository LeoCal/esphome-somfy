esphome:
  name: blinds-control
  platform: ESP8266
  board: d1_mini

  includes:
    - RFsomfy.h
    - SomfyRts.h
    - SomfyRts.cpp

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "3e92ff9cbb95fdb1181b2d7b0f9cda09"

wifi:
  ssid: "Superman2"
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Blinds-Control Hotspot"
    password: "r3ODqKLg6mv4"

captive_portal:

web_server:
  port: 80

cover:
- platform: custom
  lambda: |-
    std::vector<Cover *> covers;
    auto rfSomfy0 = new RFsomfy(0);
    App.register_component(rfSomfy0);
    auto rfSomfy1 = new RFsomfy(1);
    App.register_component(rfSomfy1);
    auto rfSomfy2 = new RFsomfy(2);
    App.register_component(rfSomfy2);
    auto rfSomfy3 = new RFsomfy(3);
    App.register_component(rfSomfy3);
    auto rfSomfy4 = new RFsomfy(4);
    App.register_component(rfSomfy4);
    covers.push_back(rfSomfy0);
    covers.push_back(rfSomfy1);
    covers.push_back(rfSomfy2);
    covers.push_back(rfSomfy3);
    covers.push_back(rfSomfy4);
    return {covers};

  covers:
    - name: "Tapparella balcone"
      device_class: shade
      id: somfy0
    - name: "Tapparella soggiorno"
      device_class: shutter
      id: somfy1
    - name: "Tapparella centrale"
      device_class: shutter
      id: somfy2
    - name: "Tapparella cucina"
      device_class: shutter
      id: somfy3
    - name: "Tapparelle"
      device_class: shutter
      id: somfy4

text_sensor:
  - platform: version
    name: "RFsomfy version"
  - platform: custom
    lambda: |-
      auto rfSomfyInfo = new RFsomfyInfo();
      App.register_component(rfSomfyInfo);
      return {rfSomfyInfo};
    text_sensors:
      name: "RFsomfy info"

binary_sensor:
  - platform: status
    name: "RFsomfy status"
